//     Создать произвольный массив.
//     Найти в этом массиве слово Яблоко.
//     Если найдено – вывести Яблоко ( у меня не получилось и получается все равно номер элемента и только после того, как я прописываю цикл for, выводит слово Яблоко).
//     Если нет, то вывести – Такого слова нет.
//     Реализовать возможность добавит любое слово в массив.
//     После нажатия ОК.
//     Вывести prompt – Какое слово?
//     Вывести – Есть такое слово.
//     Вывести – такого слова нет.


//1)    Создать произвольный массив.
//     Найти в этом массиве слово Яблоко.
//      Если найдено – вывести Яблоко ( у меня не получилось и получается все равно номер элемента и только после того, как я прописываю цикл for, выводит слово Яблоко).
//     Если нет, то вывести – Такого слова нет.

const  value = ['Лимон', 'Яблоко', 'Апельсин' ];
// метод find  приймає у себе функцію з виразом зрівняння, тобто якщо boolean вираз тру і вертає або знайдений елемент або undefined
// функція стрілка яка записана без {} це автоматичний return
// || в JS або вертає перший едемент кий в булевому виразі буде true var a = 0 || 1 буде 1, оскільки 0  у булевому еквіваленті буде фолс
console.log( value.find(item => item === 'Яблоко') || 'Такого слова нет')

//     Реализовать возможность добавит любое слово в массив.
//     После нажатия ОК.
value.push(prompt('enter word'))
console.log(value)

//     Вывести prompt – Какое слово?
//     Вывести – Есть такое слово.
//     Вывести – такого слова нет.
// метод includes перевіряє масив, чи є в ньму елемент і повертає булеве значення  тру  або фолс
value.push(prompt('enter word'))
alert(value.includes(prompt('Какое слово?')) ? 'Есть такое слово' : 'такого слова нет' )
